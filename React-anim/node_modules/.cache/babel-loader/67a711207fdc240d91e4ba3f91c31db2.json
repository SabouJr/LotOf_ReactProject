{"ast":null,"code":"import { Globals } from '@react-spring/core';\nexport * from '@react-spring/core';\nimport { unstable_batchedUpdates } from 'react-dom';\nimport { eachProp, is, toArray, FluidValue, each, getFluidValue, hasFluidValue, addFluidObserver, removeFluidObserver, callFluidObservers, createStringInterpolator, colors } from '@react-spring/shared';\nimport { AnimatedObject, createHost } from '@react-spring/animated';\nconst isCustomPropRE = /^--/;\n\nfunction dangerousStyleValue(name, value) {\n  if (value == null || typeof value === \"boolean\" || value === \"\") return \"\";\n  if (typeof value === \"number\" && value !== 0 && !isCustomPropRE.test(name) && !(isUnitlessNumber.hasOwnProperty(name) && isUnitlessNumber[name])) return value + \"px\";\n  return (\"\" + value).trim();\n}\n\nconst attributeCache = {};\n\nfunction applyAnimatedValues(instance, props) {\n  if (!instance.nodeType || !instance.setAttribute) {\n    return false;\n  }\n\n  const isFilterElement = instance.nodeName === \"filter\" || instance.parentNode && instance.parentNode.nodeName === \"filter\";\n  const {\n    style,\n    children,\n    scrollTop,\n    scrollLeft,\n    ...attributes\n  } = props;\n  const values = Object.values(attributes);\n  const names = Object.keys(attributes).map(name => isFilterElement || instance.hasAttribute(name) ? name : attributeCache[name] || (attributeCache[name] = name.replace(/([A-Z])/g, n => \"-\" + n.toLowerCase())));\n\n  if (children !== void 0) {\n    instance.textContent = children;\n  }\n\n  for (let name in style) {\n    if (style.hasOwnProperty(name)) {\n      const value = dangerousStyleValue(name, style[name]);\n      if (name === \"float\") name = \"cssFloat\";else if (isCustomPropRE.test(name)) {\n        instance.style.setProperty(name, value);\n      } else {\n        instance.style[name] = value;\n      }\n    }\n  }\n\n  names.forEach((name, i) => {\n    instance.setAttribute(name, values[i]);\n  });\n\n  if (scrollTop !== void 0) {\n    instance.scrollTop = scrollTop;\n  }\n\n  if (scrollLeft !== void 0) {\n    instance.scrollLeft = scrollLeft;\n  }\n}\n\nlet isUnitlessNumber = {\n  animationIterationCount: true,\n  borderImageOutset: true,\n  borderImageSlice: true,\n  borderImageWidth: true,\n  boxFlex: true,\n  boxFlexGroup: true,\n  boxOrdinalGroup: true,\n  columnCount: true,\n  columns: true,\n  flex: true,\n  flexGrow: true,\n  flexPositive: true,\n  flexShrink: true,\n  flexNegative: true,\n  flexOrder: true,\n  gridRow: true,\n  gridRowEnd: true,\n  gridRowSpan: true,\n  gridRowStart: true,\n  gridColumn: true,\n  gridColumnEnd: true,\n  gridColumnSpan: true,\n  gridColumnStart: true,\n  fontWeight: true,\n  lineClamp: true,\n  lineHeight: true,\n  opacity: true,\n  order: true,\n  orphans: true,\n  tabSize: true,\n  widows: true,\n  zIndex: true,\n  zoom: true,\n  fillOpacity: true,\n  floodOpacity: true,\n  stopOpacity: true,\n  strokeDasharray: true,\n  strokeDashoffset: true,\n  strokeMiterlimit: true,\n  strokeOpacity: true,\n  strokeWidth: true\n};\n\nconst prefixKey = (prefix, key) => prefix + key.charAt(0).toUpperCase() + key.substring(1);\n\nconst prefixes = [\"Webkit\", \"Ms\", \"Moz\", \"O\"];\nisUnitlessNumber = Object.keys(isUnitlessNumber).reduce((acc, prop) => {\n  prefixes.forEach(prefix => acc[prefixKey(prefix, prop)] = acc[prop]);\n  return acc;\n}, isUnitlessNumber);\nconst domTransforms = /^(matrix|translate|scale|rotate|skew)/;\nconst pxTransforms = /^(translate)/;\nconst degTransforms = /^(rotate|skew)/;\n\nconst addUnit = (value, unit) => is.num(value) && value !== 0 ? value + unit : value;\n\nconst isValueIdentity = (value, id) => is.arr(value) ? value.every(v => isValueIdentity(v, id)) : is.num(value) ? value === id : parseFloat(value) === id;\n\nclass AnimatedStyle extends AnimatedObject {\n  constructor(_ref) {\n    let {\n      x,\n      y,\n      z,\n      ...style\n    } = _ref;\n    const inputs = [];\n    const transforms = [];\n\n    if (x || y || z) {\n      inputs.push([x || 0, y || 0, z || 0]);\n      transforms.push(xyz => [`translate3d(${xyz.map(v => addUnit(v, \"px\")).join(\",\")})`, isValueIdentity(xyz, 0)]);\n    }\n\n    eachProp(style, (value, key) => {\n      if (key === \"transform\") {\n        inputs.push([value || \"\"]);\n        transforms.push(transform => [transform, transform === \"\"]);\n      } else if (domTransforms.test(key)) {\n        delete style[key];\n        if (is.und(value)) return;\n        const unit = pxTransforms.test(key) ? \"px\" : degTransforms.test(key) ? \"deg\" : \"\";\n        inputs.push(toArray(value));\n        transforms.push(key === \"rotate3d\" ? _ref2 => {\n          let [x2, y2, z2, deg] = _ref2;\n          return [`rotate3d(${x2},${y2},${z2},${addUnit(deg, unit)})`, isValueIdentity(deg, 0)];\n        } : input => [`${key}(${input.map(v => addUnit(v, unit)).join(\",\")})`, isValueIdentity(input, key.startsWith(\"scale\") ? 1 : 0)]);\n      }\n    });\n\n    if (inputs.length) {\n      style.transform = new FluidTransform(inputs, transforms);\n    }\n\n    super(style);\n  }\n\n}\n\nclass FluidTransform extends FluidValue {\n  constructor(inputs, transforms) {\n    super();\n    this.inputs = inputs;\n    this.transforms = transforms;\n    this._value = null;\n  }\n\n  get() {\n    return this._value || (this._value = this._get());\n  }\n\n  _get() {\n    let transform = \"\";\n    let identity = true;\n    each(this.inputs, (input, i) => {\n      const arg1 = getFluidValue(input[0]);\n      const [t, id] = this.transforms[i](is.arr(arg1) ? arg1 : input.map(getFluidValue));\n      transform += \" \" + t;\n      identity = identity && id;\n    });\n    return identity ? \"none\" : transform;\n  }\n\n  observerAdded(count) {\n    if (count == 1) each(this.inputs, input => each(input, value => hasFluidValue(value) && addFluidObserver(value, this)));\n  }\n\n  observerRemoved(count) {\n    if (count == 0) each(this.inputs, input => each(input, value => hasFluidValue(value) && removeFluidObserver(value, this)));\n  }\n\n  eventObserved(event) {\n    if (event.type == \"change\") {\n      this._value = null;\n    }\n\n    callFluidObservers(this, event);\n  }\n\n}\n\nconst primitives = [\"a\", \"abbr\", \"address\", \"area\", \"article\", \"aside\", \"audio\", \"b\", \"base\", \"bdi\", \"bdo\", \"big\", \"blockquote\", \"body\", \"br\", \"button\", \"canvas\", \"caption\", \"cite\", \"code\", \"col\", \"colgroup\", \"data\", \"datalist\", \"dd\", \"del\", \"details\", \"dfn\", \"dialog\", \"div\", \"dl\", \"dt\", \"em\", \"embed\", \"fieldset\", \"figcaption\", \"figure\", \"footer\", \"form\", \"h1\", \"h2\", \"h3\", \"h4\", \"h5\", \"h6\", \"head\", \"header\", \"hgroup\", \"hr\", \"html\", \"i\", \"iframe\", \"img\", \"input\", \"ins\", \"kbd\", \"keygen\", \"label\", \"legend\", \"li\", \"link\", \"main\", \"map\", \"mark\", \"menu\", \"menuitem\", \"meta\", \"meter\", \"nav\", \"noscript\", \"object\", \"ol\", \"optgroup\", \"option\", \"output\", \"p\", \"param\", \"picture\", \"pre\", \"progress\", \"q\", \"rp\", \"rt\", \"ruby\", \"s\", \"samp\", \"script\", \"section\", \"select\", \"small\", \"source\", \"span\", \"strong\", \"style\", \"sub\", \"summary\", \"sup\", \"table\", \"tbody\", \"td\", \"textarea\", \"tfoot\", \"th\", \"thead\", \"time\", \"title\", \"tr\", \"track\", \"u\", \"ul\", \"var\", \"video\", \"wbr\", \"circle\", \"clipPath\", \"defs\", \"ellipse\", \"foreignObject\", \"g\", \"image\", \"line\", \"linearGradient\", \"mask\", \"path\", \"pattern\", \"polygon\", \"polyline\", \"radialGradient\", \"rect\", \"stop\", \"svg\", \"text\", \"tspan\"];\nGlobals.assign({\n  batchedUpdates: unstable_batchedUpdates,\n  createStringInterpolator,\n  colors\n});\nconst host = createHost(primitives, {\n  applyAnimatedValues: applyAnimatedValues,\n  createAnimatedStyle: style => new AnimatedStyle(style),\n  getComponentProps: _ref3 => {\n    let {\n      scrollTop,\n      scrollLeft,\n      ...props\n    } = _ref3;\n    return props;\n  }\n});\nconst animated = host.animated;\nexport { animated as a, animated };","map":{"version":3,"mappings":"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","names":["isCustomPropRE","value","test","name","hasOwnProperty","isUnitlessNumber","trim","instance","nodeType","setAttribute","nodeName","parentNode","style","children","scrollTop","scrollLeft","props","Object","values","attributes","keys","map","isFilterElement","hasAttribute","attributeCache","replace","n","toLowerCase","textContent","dangerousStyleValue","setProperty","names","forEach","i","animationIterationCount","borderImageOutset","borderImageSlice","borderImageWidth","boxFlex","boxFlexGroup","boxOrdinalGroup","columnCount","columns","flex","flexGrow","flexPositive","flexShrink","flexNegative","flexOrder","gridRow","gridRowEnd","gridRowSpan","gridRowStart","gridColumn","gridColumnEnd","gridColumnSpan","gridColumnStart","fontWeight","lineClamp","lineHeight","opacity","order","orphans","tabSize","widows","zIndex","zoom","fillOpacity","floodOpacity","stopOpacity","strokeDasharray","strokeDashoffset","strokeMiterlimit","strokeOpacity","strokeWidth","prefix","key","charAt","toUpperCase","substring","reduce","prefixes","acc","prefixKey","prop","domTransforms","is","num","unit","arr","every","v","isValueIdentity","id","parseFloat","AnimatedObject","constructor","x","y","z","inputs","push","transforms","xyz","addUnit","join","eachProp","transform","und","pxTransforms","degTransforms","toArray","x2","y2","z2","deg","input","startsWith","length","FluidTransform","FluidValue","get","_value","_get","each","getFluidValue","arg1","t","identity","observerAdded","count","hasFluidValue","addFluidObserver","observerRemoved","removeFluidObserver","eventObserved","event","type","callFluidObservers","primitives","Globals","assign","batchedUpdates","unstable_batchedUpdates","createStringInterpolator","colors","host","createHost","primitives2","applyAnimatedValues","createAnimatedStyle","AnimatedStyle2","getComponentProps","animated"],"sources":["/Users/sabourin/Desktop/projet_perso/LotOf_ReactProject/React-anim/node_modules/@react-spring/web/src/applyAnimatedValues.ts","/Users/sabourin/Desktop/projet_perso/LotOf_ReactProject/React-anim/node_modules/@react-spring/web/src/AnimatedStyle.ts","/Users/sabourin/Desktop/projet_perso/LotOf_ReactProject/React-anim/node_modules/@react-spring/web/src/primitives.ts","/Users/sabourin/Desktop/projet_perso/LotOf_ReactProject/React-anim/node_modules/@react-spring/web/src/index.ts"],"sourcesContent":["import { Lookup } from '@react-spring/types'\n\nconst isCustomPropRE = /^--/\n\ntype Value = string | number | boolean | null\n\nfunction dangerousStyleValue(name: string, value: Value) {\n  if (value == null || typeof value === 'boolean' || value === '') return ''\n  if (\n    typeof value === 'number' &&\n    value !== 0 &&\n    !isCustomPropRE.test(name) &&\n    !(isUnitlessNumber.hasOwnProperty(name) && isUnitlessNumber[name])\n  )\n    return value + 'px'\n  // Presumes implicit 'px' suffix for unitless numbers\n  return ('' + value).trim()\n}\n\nconst attributeCache: Lookup<string> = {}\n\ntype Instance = HTMLDivElement & { style?: Lookup }\n\nexport function applyAnimatedValues(instance: Instance, props: Lookup) {\n  if (!instance.nodeType || !instance.setAttribute) {\n    return false\n  }\n\n  const isFilterElement =\n    instance.nodeName === 'filter' ||\n    (instance.parentNode && instance.parentNode.nodeName === 'filter')\n\n  const { style, children, scrollTop, scrollLeft, ...attributes } = props!\n\n  const values = Object.values(attributes)\n  const names = Object.keys(attributes).map(name =>\n    isFilterElement || instance.hasAttribute(name)\n      ? name\n      : attributeCache[name] ||\n        (attributeCache[name] = name.replace(\n          /([A-Z])/g,\n          // Attributes are written in dash case\n          n => '-' + n.toLowerCase()\n        ))\n  )\n\n  if (children !== void 0) {\n    instance.textContent = children\n  }\n\n  // Apply CSS styles\n  for (let name in style) {\n    if (style.hasOwnProperty(name)) {\n      const value = dangerousStyleValue(name, style[name])\n      if (name === 'float') name = 'cssFloat'\n      else if (isCustomPropRE.test(name)) {\n        instance.style.setProperty(name, value)\n      } else {\n        instance.style[name] = value\n      }\n    }\n  }\n\n  // Apply DOM attributes\n  names.forEach((name, i) => {\n    instance.setAttribute(name, values[i])\n  })\n\n  if (scrollTop !== void 0) {\n    instance.scrollTop = scrollTop\n  }\n  if (scrollLeft !== void 0) {\n    instance.scrollLeft = scrollLeft\n  }\n}\n\nlet isUnitlessNumber: { [key: string]: true } = {\n  animationIterationCount: true,\n  borderImageOutset: true,\n  borderImageSlice: true,\n  borderImageWidth: true,\n  boxFlex: true,\n  boxFlexGroup: true,\n  boxOrdinalGroup: true,\n  columnCount: true,\n  columns: true,\n  flex: true,\n  flexGrow: true,\n  flexPositive: true,\n  flexShrink: true,\n  flexNegative: true,\n  flexOrder: true,\n  gridRow: true,\n  gridRowEnd: true,\n  gridRowSpan: true,\n  gridRowStart: true,\n  gridColumn: true,\n  gridColumnEnd: true,\n  gridColumnSpan: true,\n  gridColumnStart: true,\n  fontWeight: true,\n  lineClamp: true,\n  lineHeight: true,\n  opacity: true,\n  order: true,\n  orphans: true,\n  tabSize: true,\n  widows: true,\n  zIndex: true,\n  zoom: true,\n  // SVG-related properties\n  fillOpacity: true,\n  floodOpacity: true,\n  stopOpacity: true,\n  strokeDasharray: true,\n  strokeDashoffset: true,\n  strokeMiterlimit: true,\n  strokeOpacity: true,\n  strokeWidth: true,\n}\n\nconst prefixKey = (prefix: string, key: string) =>\n  prefix + key.charAt(0).toUpperCase() + key.substring(1)\nconst prefixes = ['Webkit', 'Ms', 'Moz', 'O']\n\nisUnitlessNumber = Object.keys(isUnitlessNumber).reduce((acc, prop) => {\n  prefixes.forEach(prefix => (acc[prefixKey(prefix, prop)] = acc[prop]))\n  return acc\n}, isUnitlessNumber)\n","import { AnimatedObject } from '@react-spring/animated'\nimport { Lookup, OneOrMore } from '@react-spring/types'\nimport {\n  is,\n  each,\n  toArray,\n  eachProp,\n  FluidValue,\n  FluidEvent,\n  getFluidValue,\n  callFluidObservers,\n  hasFluidValue,\n  addFluidObserver,\n  removeFluidObserver,\n} from '@react-spring/shared'\n\n/** The transform-functions\n * (https://developer.mozilla.org/fr/docs/Web/CSS/transform-function)\n * that you can pass as keys to your animated component style and that will be\n * animated. Perspective has been left out as it would conflict with the\n * non-transform perspective style.\n */\nconst domTransforms = /^(matrix|translate|scale|rotate|skew)/\n\n// These keys have \"px\" units by default\nconst pxTransforms = /^(translate)/\n\n// These keys have \"deg\" units by default\nconst degTransforms = /^(rotate|skew)/\n\ntype Value = number | string\n\n/** Add a unit to the value when the value is unit-less (eg: a number) */\nconst addUnit = (value: Value, unit: string): string | 0 =>\n  is.num(value) && value !== 0 ? value + unit : value\n\n/**\n * Checks if the input value matches the identity value.\n *\n *     isValueIdentity(0, 0)              // => true\n *     isValueIdentity('0px', 0)          // => true\n *     isValueIdentity([0, '0px', 0], 0)  // => true\n */\nconst isValueIdentity = (value: OneOrMore<Value>, id: number): boolean =>\n  is.arr(value)\n    ? value.every(v => isValueIdentity(v, id))\n    : is.num(value)\n    ? value === id\n    : parseFloat(value) === id\n\ntype Inputs = ReadonlyArray<Value | FluidValue<Value>>[]\ntype Transforms = ((value: any) => [string, boolean])[]\n\n/**\n * This AnimatedStyle will simplify animated components transforms by\n * interpolating all transform function passed as keys in the style object\n * including shortcuts such as x, y and z for translateX/Y/Z\n */\nexport class AnimatedStyle extends AnimatedObject {\n  constructor({ x, y, z, ...style }: Lookup) {\n    /**\n     * An array of arrays that contains the values (static or fluid)\n     * used by each transform function.\n     */\n    const inputs: Inputs = []\n    /**\n     * An array of functions that take a list of values (static or fluid)\n     * and returns (1) a CSS transform string and (2) a boolean that's true\n     * when the transform has no effect (eg: an identity transform).\n     */\n    const transforms: Transforms = []\n\n    // Combine x/y/z into translate3d\n    if (x || y || z) {\n      inputs.push([x || 0, y || 0, z || 0])\n      transforms.push((xyz: Value[]) => [\n        `translate3d(${xyz.map(v => addUnit(v, 'px')).join(',')})`, // prettier-ignore\n        isValueIdentity(xyz, 0),\n      ])\n    }\n\n    // Pluck any other transform-related props\n    eachProp(style, (value, key) => {\n      if (key === 'transform') {\n        inputs.push([value || ''])\n        transforms.push((transform: string) => [transform, transform === ''])\n      } else if (domTransforms.test(key)) {\n        delete style[key]\n        if (is.und(value)) return\n\n        const unit = pxTransforms.test(key)\n          ? 'px'\n          : degTransforms.test(key)\n          ? 'deg'\n          : ''\n\n        inputs.push(toArray(value))\n        transforms.push(\n          key === 'rotate3d'\n            ? ([x, y, z, deg]: [number, number, number, Value]) => [\n                `rotate3d(${x},${y},${z},${addUnit(deg, unit)})`,\n                isValueIdentity(deg, 0),\n              ]\n            : (input: Value[]) => [\n                `${key}(${input.map(v => addUnit(v, unit)).join(',')})`,\n                isValueIdentity(input, key.startsWith('scale') ? 1 : 0),\n              ]\n        )\n      }\n    })\n\n    if (inputs.length) {\n      style.transform = new FluidTransform(inputs, transforms)\n    }\n\n    super(style)\n  }\n}\n\n/** @internal */\nclass FluidTransform extends FluidValue<string> {\n  protected _value: string | null = null\n\n  constructor(readonly inputs: Inputs, readonly transforms: Transforms) {\n    super()\n  }\n\n  get() {\n    return this._value || (this._value = this._get())\n  }\n\n  protected _get() {\n    let transform = ''\n    let identity = true\n    each(this.inputs, (input, i) => {\n      const arg1 = getFluidValue(input[0])\n      const [t, id] = this.transforms[i](\n        is.arr(arg1) ? arg1 : input.map(getFluidValue)\n      )\n      transform += ' ' + t\n      identity = identity && id\n    })\n    return identity ? 'none' : transform\n  }\n\n  // Start observing our inputs once we have an observer.\n  protected observerAdded(count: number) {\n    if (count == 1)\n      each(this.inputs, input =>\n        each(\n          input,\n          value => hasFluidValue(value) && addFluidObserver(value, this)\n        )\n      )\n  }\n\n  // Stop observing our inputs once we have no observers.\n  protected observerRemoved(count: number) {\n    if (count == 0)\n      each(this.inputs, input =>\n        each(\n          input,\n          value => hasFluidValue(value) && removeFluidObserver(value, this)\n        )\n      )\n  }\n\n  eventObserved(event: FluidEvent) {\n    if (event.type == 'change') {\n      this._value = null\n    }\n    callFluidObservers(this, event)\n  }\n}\n","export type Primitives = keyof JSX.IntrinsicElements\nexport const primitives: Primitives[] = [\n  'a',\n  'abbr',\n  'address',\n  'area',\n  'article',\n  'aside',\n  'audio',\n  'b',\n  'base',\n  'bdi',\n  'bdo',\n  'big',\n  'blockquote',\n  'body',\n  'br',\n  'button',\n  'canvas',\n  'caption',\n  'cite',\n  'code',\n  'col',\n  'colgroup',\n  'data',\n  'datalist',\n  'dd',\n  'del',\n  'details',\n  'dfn',\n  'dialog',\n  'div',\n  'dl',\n  'dt',\n  'em',\n  'embed',\n  'fieldset',\n  'figcaption',\n  'figure',\n  'footer',\n  'form',\n  'h1',\n  'h2',\n  'h3',\n  'h4',\n  'h5',\n  'h6',\n  'head',\n  'header',\n  'hgroup',\n  'hr',\n  'html',\n  'i',\n  'iframe',\n  'img',\n  'input',\n  'ins',\n  'kbd',\n  'keygen',\n  'label',\n  'legend',\n  'li',\n  'link',\n  'main',\n  'map',\n  'mark',\n  'menu',\n  'menuitem',\n  'meta',\n  'meter',\n  'nav',\n  'noscript',\n  'object',\n  'ol',\n  'optgroup',\n  'option',\n  'output',\n  'p',\n  'param',\n  'picture',\n  'pre',\n  'progress',\n  'q',\n  'rp',\n  'rt',\n  'ruby',\n  's',\n  'samp',\n  'script',\n  'section',\n  'select',\n  'small',\n  'source',\n  'span',\n  'strong',\n  'style',\n  'sub',\n  'summary',\n  'sup',\n  'table',\n  'tbody',\n  'td',\n  'textarea',\n  'tfoot',\n  'th',\n  'thead',\n  'time',\n  'title',\n  'tr',\n  'track',\n  'u',\n  'ul',\n  'var',\n  'video',\n  'wbr',\n  // SVG\n  'circle',\n  'clipPath',\n  'defs',\n  'ellipse',\n  'foreignObject',\n  'g',\n  'image',\n  'line',\n  'linearGradient',\n  'mask',\n  'path',\n  'pattern',\n  'polygon',\n  'polyline',\n  'radialGradient',\n  'rect',\n  'stop',\n  'svg',\n  'text',\n  'tspan',\n]\n","import { Globals } from '@react-spring/core'\nimport { unstable_batchedUpdates } from 'react-dom'\nimport { createStringInterpolator, colors } from '@react-spring/shared'\nimport { createHost } from '@react-spring/animated'\nimport { applyAnimatedValues } from './applyAnimatedValues'\nimport { AnimatedStyle } from './AnimatedStyle'\nimport { WithAnimated } from './animated'\nimport { primitives } from './primitives'\n\nGlobals.assign({\n  batchedUpdates: unstable_batchedUpdates,\n  createStringInterpolator,\n  colors,\n})\n\nconst host = createHost(primitives, {\n  applyAnimatedValues,\n  createAnimatedStyle: style => new AnimatedStyle(style),\n  getComponentProps: ({ scrollTop, scrollLeft, ...props }) => props,\n})\n\nexport const animated = host.animated as WithAnimated\nexport { animated as a }\n\nexport * from './animated'\nexport * from '@react-spring/core'\n"]},"metadata":{},"sourceType":"module"}