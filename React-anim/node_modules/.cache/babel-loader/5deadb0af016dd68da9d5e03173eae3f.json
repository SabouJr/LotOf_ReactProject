{"ast":null,"code":"import { raf } from 'rafz';\nexport { raf } from 'rafz';\nimport { useEffect, useState, useRef, useLayoutEffect as useLayoutEffect$1 } from 'react';\n\nfunction noop() {}\n\nconst defineHidden = (obj, key, value) => Object.defineProperty(obj, key, {\n  value,\n  writable: true,\n  configurable: true\n});\n\nconst is = {\n  arr: Array.isArray,\n  obj: a => !!a && a.constructor.name === \"Object\",\n  fun: a => typeof a === \"function\",\n  str: a => typeof a === \"string\",\n  num: a => typeof a === \"number\",\n  und: a => a === void 0\n};\n\nfunction isEqual(a, b) {\n  if (is.arr(a)) {\n    if (!is.arr(b) || a.length !== b.length) return false;\n\n    for (let i = 0; i < a.length; i++) {\n      if (a[i] !== b[i]) return false;\n    }\n\n    return true;\n  }\n\n  return a === b;\n}\n\nconst each = (obj, fn) => obj.forEach(fn);\n\nfunction eachProp(obj, fn, ctx) {\n  for (const key in obj) {\n    fn.call(ctx, obj[key], key);\n  }\n}\n\nconst toArray = a => is.und(a) ? [] : is.arr(a) ? a : [a];\n\nfunction flush(queue, iterator) {\n  if (queue.size) {\n    const items = Array.from(queue);\n    queue.clear();\n    each(items, iterator);\n  }\n}\n\nconst flushCalls = function (queue) {\n  for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    args[_key - 1] = arguments[_key];\n  }\n\n  return flush(queue, fn => fn(...args));\n};\n\nlet createStringInterpolator;\nlet to;\nlet colors = null;\nlet skipAnimation = false;\nlet willAdvance = noop;\n\nconst assign = globals => {\n  if (globals.to) to = globals.to;\n  if (globals.now) raf.now = globals.now;\n  if (globals.colors !== void 0) colors = globals.colors;\n  if (globals.skipAnimation != null) skipAnimation = globals.skipAnimation;\n  if (globals.createStringInterpolator) createStringInterpolator = globals.createStringInterpolator;\n  if (globals.requestAnimationFrame) raf.use(globals.requestAnimationFrame);\n  if (globals.batchedUpdates) raf.batchedUpdates = globals.batchedUpdates;\n  if (globals.willAdvance) willAdvance = globals.willAdvance;\n};\n\nvar globals = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n\n  get createStringInterpolator() {\n    return createStringInterpolator;\n  },\n\n  get to() {\n    return to;\n  },\n\n  get colors() {\n    return colors;\n  },\n\n  get skipAnimation() {\n    return skipAnimation;\n  },\n\n  get willAdvance() {\n    return willAdvance;\n  },\n\n  assign: assign\n});\nconst startQueue = new Set();\nlet currentFrame = [];\nlet prevFrame = [];\nlet priority = 0;\nconst frameLoop = {\n  get idle() {\n    return !startQueue.size && !currentFrame.length;\n  },\n\n  start(animation) {\n    if (priority > animation.priority) {\n      startQueue.add(animation);\n      raf.onStart(flushStartQueue);\n    } else {\n      startSafely(animation);\n      raf(advance);\n    }\n  },\n\n  advance,\n\n  sort(animation) {\n    if (priority) {\n      raf.onFrame(() => frameLoop.sort(animation));\n    } else {\n      const prevIndex = currentFrame.indexOf(animation);\n\n      if (~prevIndex) {\n        currentFrame.splice(prevIndex, 1);\n        startUnsafely(animation);\n      }\n    }\n  },\n\n  clear() {\n    currentFrame = [];\n    startQueue.clear();\n  }\n\n};\n\nfunction flushStartQueue() {\n  startQueue.forEach(startSafely);\n  startQueue.clear();\n  raf(advance);\n}\n\nfunction startSafely(animation) {\n  if (!currentFrame.includes(animation)) startUnsafely(animation);\n}\n\nfunction startUnsafely(animation) {\n  currentFrame.splice(findIndex(currentFrame, other => other.priority > animation.priority), 0, animation);\n}\n\nfunction advance(dt) {\n  const nextFrame = prevFrame;\n\n  for (let i = 0; i < currentFrame.length; i++) {\n    const animation = currentFrame[i];\n    priority = animation.priority;\n\n    if (!animation.idle) {\n      willAdvance(animation);\n      animation.advance(dt);\n\n      if (!animation.idle) {\n        nextFrame.push(animation);\n      }\n    }\n  }\n\n  priority = 0;\n  prevFrame = currentFrame;\n  prevFrame.length = 0;\n  currentFrame = nextFrame;\n  return currentFrame.length > 0;\n}\n\nfunction findIndex(arr, test) {\n  const index = arr.findIndex(test);\n  return index < 0 ? arr.length : index;\n}\n\nconst colors$1 = {\n  transparent: 0,\n  aliceblue: 4042850303,\n  antiquewhite: 4209760255,\n  aqua: 16777215,\n  aquamarine: 2147472639,\n  azure: 4043309055,\n  beige: 4126530815,\n  bisque: 4293182719,\n  black: 255,\n  blanchedalmond: 4293643775,\n  blue: 65535,\n  blueviolet: 2318131967,\n  brown: 2771004159,\n  burlywood: 3736635391,\n  burntsienna: 3934150143,\n  cadetblue: 1604231423,\n  chartreuse: 2147418367,\n  chocolate: 3530104575,\n  coral: 4286533887,\n  cornflowerblue: 1687547391,\n  cornsilk: 4294499583,\n  crimson: 3692313855,\n  cyan: 16777215,\n  darkblue: 35839,\n  darkcyan: 9145343,\n  darkgoldenrod: 3095792639,\n  darkgray: 2846468607,\n  darkgreen: 6553855,\n  darkgrey: 2846468607,\n  darkkhaki: 3182914559,\n  darkmagenta: 2332068863,\n  darkolivegreen: 1433087999,\n  darkorange: 4287365375,\n  darkorchid: 2570243327,\n  darkred: 2332033279,\n  darksalmon: 3918953215,\n  darkseagreen: 2411499519,\n  darkslateblue: 1211993087,\n  darkslategray: 793726975,\n  darkslategrey: 793726975,\n  darkturquoise: 13554175,\n  darkviolet: 2483082239,\n  deeppink: 4279538687,\n  deepskyblue: 12582911,\n  dimgray: 1768516095,\n  dimgrey: 1768516095,\n  dodgerblue: 512819199,\n  firebrick: 2988581631,\n  floralwhite: 4294635775,\n  forestgreen: 579543807,\n  fuchsia: 4278255615,\n  gainsboro: 3705462015,\n  ghostwhite: 4177068031,\n  gold: 4292280575,\n  goldenrod: 3668254975,\n  gray: 2155905279,\n  green: 8388863,\n  greenyellow: 2919182335,\n  grey: 2155905279,\n  honeydew: 4043305215,\n  hotpink: 4285117695,\n  indianred: 3445382399,\n  indigo: 1258324735,\n  ivory: 4294963455,\n  khaki: 4041641215,\n  lavender: 3873897215,\n  lavenderblush: 4293981695,\n  lawngreen: 2096890111,\n  lemonchiffon: 4294626815,\n  lightblue: 2916673279,\n  lightcoral: 4034953471,\n  lightcyan: 3774873599,\n  lightgoldenrodyellow: 4210742015,\n  lightgray: 3553874943,\n  lightgreen: 2431553791,\n  lightgrey: 3553874943,\n  lightpink: 4290167295,\n  lightsalmon: 4288707327,\n  lightseagreen: 548580095,\n  lightskyblue: 2278488831,\n  lightslategray: 2005441023,\n  lightslategrey: 2005441023,\n  lightsteelblue: 2965692159,\n  lightyellow: 4294959359,\n  lime: 16711935,\n  limegreen: 852308735,\n  linen: 4210091775,\n  magenta: 4278255615,\n  maroon: 2147483903,\n  mediumaquamarine: 1724754687,\n  mediumblue: 52735,\n  mediumorchid: 3126187007,\n  mediumpurple: 2473647103,\n  mediumseagreen: 1018393087,\n  mediumslateblue: 2070474495,\n  mediumspringgreen: 16423679,\n  mediumturquoise: 1221709055,\n  mediumvioletred: 3340076543,\n  midnightblue: 421097727,\n  mintcream: 4127193855,\n  mistyrose: 4293190143,\n  moccasin: 4293178879,\n  navajowhite: 4292783615,\n  navy: 33023,\n  oldlace: 4260751103,\n  olive: 2155872511,\n  olivedrab: 1804477439,\n  orange: 4289003775,\n  orangered: 4282712319,\n  orchid: 3664828159,\n  palegoldenrod: 4008225535,\n  palegreen: 2566625535,\n  paleturquoise: 2951671551,\n  palevioletred: 3681588223,\n  papayawhip: 4293907967,\n  peachpuff: 4292524543,\n  peru: 3448061951,\n  pink: 4290825215,\n  plum: 3718307327,\n  powderblue: 2967529215,\n  purple: 2147516671,\n  rebeccapurple: 1714657791,\n  red: 4278190335,\n  rosybrown: 3163525119,\n  royalblue: 1097458175,\n  saddlebrown: 2336560127,\n  salmon: 4202722047,\n  sandybrown: 4104413439,\n  seagreen: 780883967,\n  seashell: 4294307583,\n  sienna: 2689740287,\n  silver: 3233857791,\n  skyblue: 2278484991,\n  slateblue: 1784335871,\n  slategray: 1887473919,\n  slategrey: 1887473919,\n  snow: 4294638335,\n  springgreen: 16744447,\n  steelblue: 1182971135,\n  tan: 3535047935,\n  teal: 8421631,\n  thistle: 3636451583,\n  tomato: 4284696575,\n  turquoise: 1088475391,\n  violet: 4001558271,\n  wheat: 4125012991,\n  white: 4294967295,\n  whitesmoke: 4126537215,\n  yellow: 4294902015,\n  yellowgreen: 2597139199\n};\nconst NUMBER = \"[-+]?\\\\d*\\\\.?\\\\d+\";\nconst PERCENTAGE = NUMBER + \"%\";\n\nfunction call() {\n  for (var _len2 = arguments.length, parts = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n    parts[_key2] = arguments[_key2];\n  }\n\n  return \"\\\\(\\\\s*(\" + parts.join(\")\\\\s*,\\\\s*(\") + \")\\\\s*\\\\)\";\n}\n\nconst rgb = new RegExp(\"rgb\" + call(NUMBER, NUMBER, NUMBER));\nconst rgba = new RegExp(\"rgba\" + call(NUMBER, NUMBER, NUMBER, NUMBER));\nconst hsl = new RegExp(\"hsl\" + call(NUMBER, PERCENTAGE, PERCENTAGE));\nconst hsla = new RegExp(\"hsla\" + call(NUMBER, PERCENTAGE, PERCENTAGE, NUMBER));\nconst hex3 = /^#([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})$/;\nconst hex4 = /^#([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})$/;\nconst hex6 = /^#([0-9a-fA-F]{6})$/;\nconst hex8 = /^#([0-9a-fA-F]{8})$/;\n\nfunction normalizeColor(color) {\n  let match;\n\n  if (typeof color === \"number\") {\n    return color >>> 0 === color && color >= 0 && color <= 4294967295 ? color : null;\n  }\n\n  if (match = hex6.exec(color)) return parseInt(match[1] + \"ff\", 16) >>> 0;\n\n  if (colors && colors[color] !== void 0) {\n    return colors[color];\n  }\n\n  if (match = rgb.exec(color)) {\n    return (parse255(match[1]) << 24 | parse255(match[2]) << 16 | parse255(match[3]) << 8 | 255) >>> 0;\n  }\n\n  if (match = rgba.exec(color)) {\n    return (parse255(match[1]) << 24 | parse255(match[2]) << 16 | parse255(match[3]) << 8 | parse1(match[4])) >>> 0;\n  }\n\n  if (match = hex3.exec(color)) {\n    return parseInt(match[1] + match[1] + match[2] + match[2] + match[3] + match[3] + \"ff\", 16) >>> 0;\n  }\n\n  if (match = hex8.exec(color)) return parseInt(match[1], 16) >>> 0;\n\n  if (match = hex4.exec(color)) {\n    return parseInt(match[1] + match[1] + match[2] + match[2] + match[3] + match[3] + match[4] + match[4], 16) >>> 0;\n  }\n\n  if (match = hsl.exec(color)) {\n    return (hslToRgb(parse360(match[1]), parsePercentage(match[2]), parsePercentage(match[3])) | 255) >>> 0;\n  }\n\n  if (match = hsla.exec(color)) {\n    return (hslToRgb(parse360(match[1]), parsePercentage(match[2]), parsePercentage(match[3])) | parse1(match[4])) >>> 0;\n  }\n\n  return null;\n}\n\nfunction hue2rgb(p, q, t) {\n  if (t < 0) t += 1;\n  if (t > 1) t -= 1;\n  if (t < 1 / 6) return p + (q - p) * 6 * t;\n  if (t < 1 / 2) return q;\n  if (t < 2 / 3) return p + (q - p) * (2 / 3 - t) * 6;\n  return p;\n}\n\nfunction hslToRgb(h, s, l) {\n  const q = l < 0.5 ? l * (1 + s) : l + s - l * s;\n  const p = 2 * l - q;\n  const r = hue2rgb(p, q, h + 1 / 3);\n  const g = hue2rgb(p, q, h);\n  const b = hue2rgb(p, q, h - 1 / 3);\n  return Math.round(r * 255) << 24 | Math.round(g * 255) << 16 | Math.round(b * 255) << 8;\n}\n\nfunction parse255(str) {\n  const int = parseInt(str, 10);\n  if (int < 0) return 0;\n  if (int > 255) return 255;\n  return int;\n}\n\nfunction parse360(str) {\n  const int = parseFloat(str);\n  return (int % 360 + 360) % 360 / 360;\n}\n\nfunction parse1(str) {\n  const num = parseFloat(str);\n  if (num < 0) return 0;\n  if (num > 1) return 255;\n  return Math.round(num * 255);\n}\n\nfunction parsePercentage(str) {\n  const int = parseFloat(str);\n  if (int < 0) return 0;\n  if (int > 100) return 1;\n  return int / 100;\n}\n\nfunction colorToRgba(input) {\n  let int32Color = normalizeColor(input);\n  if (int32Color === null) return input;\n  int32Color = int32Color || 0;\n  let r = (int32Color & 4278190080) >>> 24;\n  let g = (int32Color & 16711680) >>> 16;\n  let b = (int32Color & 65280) >>> 8;\n  let a = (int32Color & 255) / 255;\n  return `rgba(${r}, ${g}, ${b}, ${a})`;\n}\n\nconst createInterpolator = (range, output, extrapolate) => {\n  if (is.fun(range)) {\n    return range;\n  }\n\n  if (is.arr(range)) {\n    return createInterpolator({\n      range,\n      output,\n      extrapolate\n    });\n  }\n\n  if (is.str(range.output[0])) {\n    return createStringInterpolator(range);\n  }\n\n  const config = range;\n  const outputRange = config.output;\n  const inputRange = config.range || [0, 1];\n  const extrapolateLeft = config.extrapolateLeft || config.extrapolate || \"extend\";\n  const extrapolateRight = config.extrapolateRight || config.extrapolate || \"extend\";\n\n  const easing = config.easing || (t => t);\n\n  return input => {\n    const range2 = findRange(input, inputRange);\n    return interpolate(input, inputRange[range2], inputRange[range2 + 1], outputRange[range2], outputRange[range2 + 1], easing, extrapolateLeft, extrapolateRight, config.map);\n  };\n};\n\nfunction interpolate(input, inputMin, inputMax, outputMin, outputMax, easing, extrapolateLeft, extrapolateRight, map) {\n  let result = map ? map(input) : input;\n\n  if (result < inputMin) {\n    if (extrapolateLeft === \"identity\") return result;else if (extrapolateLeft === \"clamp\") result = inputMin;\n  }\n\n  if (result > inputMax) {\n    if (extrapolateRight === \"identity\") return result;else if (extrapolateRight === \"clamp\") result = inputMax;\n  }\n\n  if (outputMin === outputMax) return outputMin;\n  if (inputMin === inputMax) return input <= inputMin ? outputMin : outputMax;\n  if (inputMin === -Infinity) result = -result;else if (inputMax === Infinity) result = result - inputMin;else result = (result - inputMin) / (inputMax - inputMin);\n  result = easing(result);\n  if (outputMin === -Infinity) result = -result;else if (outputMax === Infinity) result = result + outputMin;else result = result * (outputMax - outputMin) + outputMin;\n  return result;\n}\n\nfunction findRange(input, inputRange) {\n  for (var i = 1; i < inputRange.length - 1; ++i) if (inputRange[i] >= input) break;\n\n  return i - 1;\n}\n\nconst $get = Symbol.for(\"FluidValue.get\");\nconst $observers = Symbol.for(\"FluidValue.observers\");\n\nconst hasFluidValue = arg => Boolean(arg && arg[$get]);\n\nconst getFluidValue = arg => arg && arg[$get] ? arg[$get]() : arg;\n\nconst getFluidObservers = target => target[$observers] || null;\n\nfunction callFluidObserver(observer, event) {\n  if (observer.eventObserved) {\n    observer.eventObserved(event);\n  } else {\n    observer(event);\n  }\n}\n\nfunction callFluidObservers(target, event) {\n  let observers = target[$observers];\n\n  if (observers) {\n    observers.forEach(observer => {\n      callFluidObserver(observer, event);\n    });\n  }\n}\n\nclass FluidValue {\n  constructor(get) {\n    if (!get && !(get = this.get)) {\n      throw Error(\"Unknown getter\");\n    }\n\n    setFluidGetter(this, get);\n  }\n\n}\n\nconst setFluidGetter = (target, get) => setHidden(target, $get, get);\n\nfunction addFluidObserver(target, observer) {\n  if (target[$get]) {\n    let observers = target[$observers];\n\n    if (!observers) {\n      setHidden(target, $observers, observers = new Set());\n    }\n\n    if (!observers.has(observer)) {\n      observers.add(observer);\n\n      if (target.observerAdded) {\n        target.observerAdded(observers.size, observer);\n      }\n    }\n  }\n\n  return observer;\n}\n\nfunction removeFluidObserver(target, observer) {\n  let observers = target[$observers];\n\n  if (observers && observers.has(observer)) {\n    const count = observers.size - 1;\n\n    if (count) {\n      observers.delete(observer);\n    } else {\n      target[$observers] = null;\n    }\n\n    if (target.observerRemoved) {\n      target.observerRemoved(count, observer);\n    }\n  }\n}\n\nconst setHidden = (target, key, value) => Object.defineProperty(target, key, {\n  value,\n  writable: true,\n  configurable: true\n});\n\nconst numberRegex = /[+\\-]?(?:0|[1-9]\\d*)(?:\\.\\d*)?(?:[eE][+\\-]?\\d+)?/g;\nconst colorRegex = /(#(?:[0-9a-f]{2}){2,4}|(#[0-9a-f]{3})|(rgb|hsl)a?\\((-?\\d+%?[,\\s]+){2,3}\\s*[\\d\\.]+%?\\))/gi;\nlet namedColorRegex;\nconst rgbaRegex = /rgba\\(([0-9\\.-]+), ([0-9\\.-]+), ([0-9\\.-]+), ([0-9\\.-]+)\\)/gi;\n\nconst rgbaRound = (_, p1, p2, p3, p4) => `rgba(${Math.round(p1)}, ${Math.round(p2)}, ${Math.round(p3)}, ${p4})`;\n\nconst createStringInterpolator$1 = config => {\n  if (!namedColorRegex) namedColorRegex = colors ? new RegExp(`(${Object.keys(colors).join(\"|\")})`, \"g\") : /^\\b$/;\n  const output = config.output.map(value => getFluidValue(value).replace(colorRegex, colorToRgba).replace(namedColorRegex, colorToRgba));\n  const keyframes = output.map(value => value.match(numberRegex).map(Number));\n  const outputRanges = keyframes[0].map((_, i) => keyframes.map(values => {\n    if (!(i in values)) {\n      throw Error('The arity of each \"output\" value must be equal');\n    }\n\n    return values[i];\n  }));\n  const interpolators = outputRanges.map(output2 => createInterpolator({ ...config,\n    output: output2\n  }));\n  return input => {\n    let i = 0;\n    return output[0].replace(numberRegex, () => String(interpolators[i++](input))).replace(rgbaRegex, rgbaRound);\n  };\n};\n\nconst prefix = \"react-spring: \";\n\nconst once = fn => {\n  const func = fn;\n  let called = false;\n\n  if (typeof func != \"function\") {\n    throw new TypeError(`${prefix}once requires a function parameter`);\n  }\n\n  return function () {\n    if (!called) {\n      func(...arguments);\n      called = true;\n    }\n  };\n};\n\nconst warnInterpolate = once(console.warn);\n\nfunction deprecateInterpolate() {\n  warnInterpolate(`${prefix}The \"interpolate\" function is deprecated in v9 (use \"to\" instead)`);\n}\n\nconst warnDirectCall = once(console.warn);\n\nfunction deprecateDirectCall() {\n  warnDirectCall(`${prefix}Directly calling start instead of using the api object is deprecated in v9 (use \".start\" instead)`);\n}\n\nfunction isAnimatedString(value) {\n  return is.str(value) && (value[0] == \"#\" || /\\d/.test(value) || value in (colors || {}));\n}\n\nconst useOnce = effect => useEffect(effect, emptyDeps);\n\nconst emptyDeps = [];\n\nfunction useForceUpdate() {\n  const update = useState()[1];\n  const mounted = useState(makeMountedRef)[0];\n  useOnce(mounted.unmount);\n  return () => {\n    if (mounted.current) {\n      update({});\n    }\n  };\n}\n\nfunction makeMountedRef() {\n  const mounted = {\n    current: true,\n    unmount: () => () => {\n      mounted.current = false;\n    }\n  };\n  return mounted;\n}\n\nfunction useMemoOne(getResult, inputs) {\n  const [initial] = useState(() => ({\n    inputs,\n    result: getResult()\n  }));\n  const committed = useRef();\n  const prevCache = committed.current;\n  let cache = prevCache;\n\n  if (cache) {\n    const useCache = Boolean(inputs && cache.inputs && areInputsEqual(inputs, cache.inputs));\n\n    if (!useCache) {\n      cache = {\n        inputs,\n        result: getResult()\n      };\n    }\n  } else {\n    cache = initial;\n  }\n\n  useEffect(() => {\n    committed.current = cache;\n\n    if (prevCache == initial) {\n      initial.inputs = initial.result = void 0;\n    }\n  }, [cache]);\n  return cache.result;\n}\n\nfunction areInputsEqual(next, prev) {\n  if (next.length !== prev.length) {\n    return false;\n  }\n\n  for (let i = 0; i < next.length; i++) {\n    if (next[i] !== prev[i]) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nfunction usePrev(value) {\n  const prevRef = useRef();\n  useEffect(() => {\n    prevRef.current = value;\n  });\n  return prevRef.current;\n}\n\nconst useLayoutEffect = typeof window !== \"undefined\" && window.document && window.document.createElement ? useLayoutEffect$1 : useEffect;\nexport { FluidValue, globals as Globals, addFluidObserver, callFluidObserver, callFluidObservers, colorToRgba, colors$1 as colors, createInterpolator, createStringInterpolator$1 as createStringInterpolator, defineHidden, deprecateDirectCall, deprecateInterpolate, each, eachProp, flush, flushCalls, frameLoop, getFluidObservers, getFluidValue, hasFluidValue, hex3, hex4, hex6, hex8, hsl, hsla, is, isAnimatedString, isEqual, noop, removeFluidObserver, rgb, rgba, setFluidGetter, toArray, useForceUpdate, useLayoutEffect, useMemoOne, useOnce, usePrev };","map":{"version":3,"mappings":"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","names":["defineHidden","Object","defineProperty","obj","key","value","writable","configurable","arr","Array","isArray","a","constructor","name","fun","str","num","und","is","b","length","i","forEach","fn","call","ctx","queue","size","from","clear","each","items","iterator","args","flush","createStringInterpolator","noop","globals","to","now","raf","colors","skipAnimation","requestAnimationFrame","use","batchedUpdates","willAdvance","startQueue","Set","idle","currentFrame","start","priority","animation","add","onStart","flushStartQueue","startSafely","advance","sort","onFrame","frameLoop","indexOf","prevIndex","splice","startUnsafely","includes","findIndex","other","prevFrame","dt","nextFrame","push","test","index","transparent","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","burntsienna","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","NUMBER","parts","join","RegExp","PERCENTAGE","color","match","matchers.hex6","exec","parseInt","G.colors","matchers.rgb","parse255","matchers.rgba","parse1","matchers.hex3","matchers.hex8","matchers.hex4","matchers.hsl","parse360","parsePercentage","matchers.hsla","t","p","q","l","s","hue2rgb","h","Math","round","r","g","int","parseFloat","input","normalizeColor2","int32Color","createInterpolator","range","output","extrapolate","G.createStringInterpolator","config","extrapolateLeft","extrapolateRight","easing","findRange","inputRange","interpolate","range2","outputRange","map","result","inputMin","inputMax","outputMin","outputMax","Infinity","$get","Symbol","for","arg","Boolean","target","$observers","observer","eventObserved","event","observers","callFluidObserver","get","Error","setFluidGetter","setHidden","has","observerAdded","count","delete","observerRemoved","numberRegex","p1","p2","p3","p4","namedColorRegex","keys","getFluidValue","replace","colorRegex","colorToRgba2","Number","keyframes","values","outputRanges","output2","createInterpolator2","String","interpolators","rgbaRegex","rgbaRound","prefix","func","TypeError","called","once","console","warn","warnInterpolate","warnDirectCall","useOnce","effect","useEffect","emptyDeps","update","useState","makeMountedRef","mounted","unmount","current","getResult","inputs","useRef","committed","prevCache","cache","areInputsEqual","useCache","initial","next","prev","prevRef","useLayoutEffect","window","document","createElement","React.useLayoutEffect","React.useEffect"],"sources":["src/helpers.ts","src/globals.ts","src/FrameLoop.ts","src/colors.ts","src/colorMatchers.ts","src/normalizeColor.ts","src/colorToRgba.ts","src/createInterpolator.ts","src/fluids.ts","src/stringInterpolation.ts","src/deprecations.ts","src/isAnimatedString.ts","src/hooks/useOnce.ts","src/hooks/useForceUpdate.ts","src/hooks/useMemoOne.ts","src/hooks/usePrev.ts","src/hooks/useLayoutEffect.ts"],"sourcesContent":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null]},"metadata":{},"sourceType":"module"}